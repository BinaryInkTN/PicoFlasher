import os
from pathlib import Path


def validate_iso(iso_path: str) -> None:
    """Validate ISO file"""
    path = Path(iso_path)
    
    if not path.exists():
        raise ValidationError(f"ISO file not found: {iso_path}")
    
    if not path.is_file():
        raise ValidationError(f"Not a file: {iso_path}")
    
    if path.stat().st_size == 0:
        raise ValidationError(f"ISO file is empty: {iso_path}")
    
    # Check if it's a valid ISO by extension or magic number
    if not iso_path.lower().endswith(('.iso', '.img')):
        # Could add magic number check here
        print(f"Warning: {iso_path} doesn't have .iso extension")


def validate_usb_device(device_path: str) -> None:
    """Validate USB device"""
    if not os.path.exists(device_path):
        raise ValidationError(f"Device not found: {device_path}")
    
    # Additional validation based on platform
    if sys.platform == 'linux':
        if not device_path.startswith('/dev/'):
            raise ValidationError("Invalid device path on Linux")
    elif sys.platform == 'win32':
        if not device_path.startswith('\\\\.\\'):
            raise ValidationError("Invalid device path on Windows")


def validate_checksum(file_path: str, expected_hash: str, algorithm: str = 'sha256') -> bool:
    """Validate file checksum"""
    pass